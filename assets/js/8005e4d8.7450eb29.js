"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5145],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),l=u(t),d=a,f=l["".concat(s,".").concat(d)]||l[d]||m[d]||o;return t?r.createElement(f,c(c({ref:n},p),{},{components:t})):r.createElement(f,c({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[l]="string"==typeof e?e:a,c[1]=i;for(var u=2;u<o;u++)c[u]=t[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8562:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:0},c="Account Balance",i={unversionedId:"API Doc/Query APIs/AccountBalance",id:"API Doc/Query APIs/AccountBalance",title:"Account Balance",description:"AccountBalnce(seq_num string)",source:"@site/docs/API Doc/Query APIs/AccountBalance.md",sourceDirName:"API Doc/Query APIs",slug:"/API Doc/Query APIs/AccountBalance",permalink:"/Auticuro/docs/API Doc/Query APIs/AccountBalance",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Query APIs",permalink:"/Auticuro/docs/category/query-apis"},next:{title:"Batch Account Balance",permalink:"/Auticuro/docs/API Doc/Query APIs/BatchAccountBalance"}},s={},u=[{value:"Description",id:"description",level:3},{value:"Definitions",id:"definitions",level:3}],p={toc:u},l="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(l,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"account-balance"},"Account Balance"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"AccountBalnce(seq_num: u64, account_id: string)"))),(0,a.kt)("h3",{id:"description"},"Description"),(0,a.kt)("p",null,"Given ",(0,a.kt)("em",{parentName:"p"},"<seq_num, account_id>"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"AccountBalance")," returns balances for the ",(0,a.kt)("em",{parentName:"p"},"account_id")," at input ",(0,a.kt)("em",{parentName:"p"},"seq_num"),". Returned\nbalances consist of ",(0,a.kt)("em",{parentName:"p"},"available"),", ",(0,a.kt)("em",{parentName:"p"},"reservation"),", ",(0,a.kt)("em",{parentName:"p"},"pending_in"),", and ",(0,a.kt)("em",{parentName:"p"},"pending_out"),"."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"seq_num")," is used for read-after-write consistency guarantee. If the query side's last seen seq",(0,a.kt)("em",{parentName:"p"},"num is smaller than the input one,\nan error message of ",(0,a.kt)("strong",{parentName:"em"},"NotAvailable")," is returned. If input ",(0,a.kt)("em",{parentName:"em"},"seq_num")," is 0,  the latest balance is returned without _seq_num"),"\ncheck."),(0,a.kt)("h3",{id:"definitions"},"Definitions"),(0,a.kt)("p",null,"Account balance response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf3"},"message AccountBalanceResponse {\n  option Error error = 1;\n  string account_id = 2;\n  uint64 seq_num = 3;\n  Balance balance = 4;\n}\n\nmessage Balance {\n  string available = 1;\n  map<string, string> reservations = 2; // reservation_id -> reservation amount\n  map<string, string> pending_in = 3;   // txn_id -> amount\n  map<string, string> pending_out = 4;\n\n}\n")))}m.isMDXComponent=!0}}]);