"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6859],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=u(r),m=a,h=c["".concat(p,".").concat(m)]||c[m]||d[m]||l;return r?n.createElement(h,i(i({ref:t},s),{},{components:r})):n.createElement(h,i({ref:t},s))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6952:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const l={sidebar_position:2},i="Quick Start",o={unversionedId:"Quick Start",id:"Quick Start",title:"Quick Start",description:"To quickly get started with Auticuro, follow these simple steps:",source:"@site/docs/Quick Start.md",sourceDirName:".",slug:"/Quick Start",permalink:"/Auticuro/docs/Quick Start",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Use Cases",permalink:"/Auticuro/docs/Introduction/Use Cases"},next:{title:"Design",permalink:"/Auticuro/docs/category/design"}},p={},u=[{value:"1. For the impatient",id:"1-for-the-impatient",level:2},{value:"1.1. Setup Environment",id:"11-setup-environment",level:3},{value:"For Ubuntu",id:"for-ubuntu",level:4},{value:"For MacOS",id:"for-macos",level:4},{value:"1.2. Clone and Build",id:"12-clone-and-build",level:3},{value:"1.3. Start the Auticuro cluster",id:"13-start-the-auticuro-cluster",level:3},{value:"1.4. Send Requests to the Cluster",id:"14-send-requests-to-the-cluster",level:3},{value:"2. The detailed Guide",id:"2-the-detailed-guide",level:2},{value:"2.1. Setup Environment",id:"21-setup-environment",level:3},{value:"For Ubuntu",id:"for-ubuntu-1",level:4},{value:"For MacOS",id:"for-macos-1",level:4},{value:"2.2. Build and Test",id:"22-build-and-test",level:3},{value:"Build",id:"build",level:4},{value:"Unit Test",id:"unit-test",level:4},{value:"Run Test Coverage",id:"run-test-coverage",level:4},{value:"2.3. Start a 5-node cluster locally",id:"23-start-a-5-node-cluster-locally",level:3},{value:"2.4. Send Request With gRPCurl",id:"24-send-request-with-grpcurl",level:3},{value:"2.4.1. Send Write Requests",id:"241-send-write-requests",level:4},{value:"2.4.2. Send Read Requests",id:"242-send-read-requests",level:4}],s={toc:u},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start"},"Quick Start"),(0,a.kt)("p",null,"To quickly get started with Auticuro, follow these simple steps:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Visit the Auticuro GitHub repository at ",(0,a.kt)("inlineCode",{parentName:"li"},"https://github.com/airwallex/Auticuro"),"."),(0,a.kt)("li",{parentName:"ul"},"Star and fork the repository to your personal account."),(0,a.kt)("li",{parentName:"ul"},"Clone the forked repository to your local machine using ",(0,a.kt)("inlineCode",{parentName:"li"},"git clone https://github.\ncom/your-username/Auticuro.git"),"."),(0,a.kt)("li",{parentName:"ul"},"Navigate to the Auticuro directory using ",(0,a.kt)("inlineCode",{parentName:"li"},"cd Auticuro"),"."),(0,a.kt)("li",{parentName:"ul"},"Get started with instructions below.")),(0,a.kt)("h2",{id:"1-for-the-impatient"},"1. For the impatient"),(0,a.kt)("h3",{id:"11-setup-environment"},"1.1. Setup Environment"),(0,a.kt)("h4",{id:"for-ubuntu"},"For Ubuntu"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sh scripts/setup_for_ubuntu.sh\n")),(0,a.kt)("h4",{id:"for-macos"},"For MacOS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sh scripts/setup_for_mac.sh\n")),(0,a.kt)("h3",{id:"12-clone-and-build"},"1.2. Clone and Build"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git clone https://github.com/your-username/Auticuro.git\ncd Auticuro\ncargo build --release\n")),(0,a.kt)("h3",{id:"13-start-the-auticuro-cluster"},"1.3. Start the Auticuro cluster"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sh scripts/start_cluster.sh\n")),(0,a.kt)("h3",{id:"14-send-requests-to-the-cluster"},"1.4. Send Requests to the Cluster"),(0,a.kt)("p",null,"Create two accounts, and transfer money from one account to another, then check their balance and balance change history."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sh scripts/transfer_example.sh\n")),(0,a.kt)("h2",{id:"2-the-detailed-guide"},"2. The detailed Guide"),(0,a.kt)("h3",{id:"21-setup-environment"},"2.1. Setup Environment"),(0,a.kt)("h4",{id:"for-ubuntu-1"},"For Ubuntu"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# Install tools\napt-get update -y && apt-get upgrade -y && apt-get install -y build-essential curl cmake\n\n# Install grpcurl\nwget https://github.com/fullstorydev/grpcurl/releases/download/v1.8.5/grpcurl_1.8.5_linux_x86_64.tar.gz --no-check-certificate\ntar -xvf grpcurl_1.8.5_linux_x86_64.tar.gz\nchmod +x grpcurl\n\n# Download rust\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --profile=default -y\n\n# Set cargo path\nsource $HOME/.cargo/env\n\n# Install rust nightly\nrustup toolchain install nightly-2022-01-13\n\n# Set rust nightly as default\nrustup default nightly-2022-01-13\n\n# Install rustfmt component\nrustup component add rustfmt\n\n# For UT Coverage, need install grcov and llvm-tools\ncargo install grcov\nrustup component add llvm-tools-preview\n")),(0,a.kt)("h4",{id:"for-macos-1"},"For MacOS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# Install tools\nbrew install curl\nbrew install protobuf\nbrew install cmake && brew link cmake\nbrew install grpcurl\n\n# Download rust\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --profile=default -y\n\n# Set cargo path\nsource $HOME/.cargo/env\n\n# Install rust nightly\nrustup toolchain install nightly-2022-01-13\n\n# Set rust nightly as default\nrustup default nightly-2022-01-13\n\n# Install rustfmt component\nrustup component add rustfmt\n\n# Install xcode(Ignore if installed)\n# xcode-select --install\n\n# For UT Coverage, need install grcov and llvm-tools\ncargo install grcov\nrustup component add llvm-tools-preview\n")),(0,a.kt)("h3",{id:"22-build-and-test"},"2.2. Build and Test"),(0,a.kt)("p",null,"Below commands are platform independent, applicable for both Ubuntu and MacOS."),(0,a.kt)("h4",{id:"build"},"Build"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cargo build --release\n")),(0,a.kt)("h4",{id:"unit-test"},"Unit Test"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cargo test --release\n")),(0,a.kt)("h4",{id:"run-test-coverage"},"Run Test Coverage"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Generate the test coverage report\nThe report will be auto-open in the browser")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd firm-wallet\nsh scripts/run_test_coverage.sh\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"View the report directory(Optional)"),(0,a.kt)("p",{parentName:"li"},"Find the report in the dir ",(0,a.kt)("inlineCode",{parentName:"p"},"target/release/coverage")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ls target/release/coverage \n\n# The output\n# badges          coverage.json   index.html      src\n")),(0,a.kt)("h3",{id:"23-start-a-5-node-cluster-locally"},"2.3. Start a 5-node cluster locally"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The quick way\nIt will start a 5-node ",(0,a.kt)("inlineCode",{parentName:"li"},"firm-wallet-service")," cluster and a ",(0,a.kt)("inlineCode",{parentName:"li"},"firm-wallet-gateway")," which will find leader and redirect\nrequests to the leader node of ",(0,a.kt)("inlineCode",{parentName:"li"},"firm-wallet-service")," cluster.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd firm-wallet\n\nsh scripts/start_cluster.sh\n\n# Press `Ctrl + C` to shutdown the cluster\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Manually Start")),(0,a.kt)("p",null,"To start all 5 raft nodes manually, execute the",(0,a.kt)("inlineCode",{parentName:"p"},"run_node.sh")," script with a store id:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# Start the firm-wallet-gateway\ncd firm-wallet/firm-wallet-gateway\nsh run_gateway.sh\n\n# Change dir to firm-wallet-service\ncd firm-wallet/firm-wallet-service\n\n# Start 5 nodes, open a new termial for each node\nsh run_node.sh 1\nsh run_node.sh 2\nsh run_node.sh 3\nsh run_node.sh 4\nsh run_node.sh 5\n")),(0,a.kt)("p",null,"Otherwise, please update the corresponding ",(0,a.kt)("inlineCode",{parentName:"p"},"peer_<id>")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"status_address")," for each service."),(0,a.kt)("p",null,"Upon execution, cluster configuration, raft log/state, and application state are persisted to RocksDB specified by\n",(0,a.kt)("inlineCode",{parentName:"p"},"db_path"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"raft_db_path"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"wallet_db_path")," each. For a fresh new start, clear all three databases by deleting files under\nthe specified path."),(0,a.kt)("h3",{id:"24-send-request-with-grpcurl"},"2.4. Send Request With gRPCurl"),(0,a.kt)("p",null,"Write requests can ONLY be processed by the leader, read requests can be processed by every node.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"firm-wallet-gateway"),"serves at ",(0,a.kt)("inlineCode",{parentName:"p"},"port=20171"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"firm-wallet-service")," cluster serves at ",(0,a.kt)("inlineCode",{parentName:"p"},"port=20161~20165"),"."),(0,a.kt)("p",null,"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"grpcurl")," commands in ",(0,a.kt)("inlineCode",{parentName:"p"},"dependencies/hologram-protos/src/proto")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd dependencies/hologram-protos/src/proto\n")),(0,a.kt)("h4",{id:"241-send-write-requests"},"2.4.1. Send Write Requests"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"firm-wallet-gateway")," will redirect write requests to the leader of the ",(0,a.kt)("inlineCode",{parentName:"p"},"wallet-service")," cluster."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create Accounts")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'# Create an account for ben\ngrpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto account_management_servicepb.proto -d \'{"account_config":{"asset_class":{"cash":{"currency":"USD"}}},"header":{"account_id":"ben","dedup_id":"asjdh78y"}}\'  127.0.0.1:20171 firm_wallet.account_management_servicepb.AccountManagementService/CreateAccount\n\n# Create an account for tony\ngrpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto account_management_servicepb.proto -d \'{"account_config":{"asset_class":{"cash":{"currency":"USD"}}},"header":{"account_id":"tony","dedup_id":"gklfjg8937"}}\'  127.0.0.1:20171 firm_wallet.account_management_servicepb.AccountManagementService/CreateAccount\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Transfer")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'grpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto balance_operation_servicepb.proto -d \'{"dedup_id":"1234567890", "transfer_spec": {"from_account_id": "tony", "to_account_id": "ben", "amount": "1234.5"}}\'  127.0.0.1:20171 firm_wallet.balance_operation_servicepb.BalanceOperationService/Transfer\n')),(0,a.kt)("h4",{id:"242-send-read-requests"},"2.4.2. Send Read Requests"),(0,a.kt)("p",null,"Each node of the ",(0,a.kt)("inlineCode",{parentName:"p"},"wallet-service")," cluster has consistent state, send read requests to each node to check."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Query Balance")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'grpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto balance_operation_servicepb.proto -d \'{"account_id": "tony"}\'  127.0.0.1:20161 firm_wallet.balance_operation_servicepb.BalanceOperationService/QueryBalance\ngrpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto balance_operation_servicepb.proto -d \'{"account_id": "tony"}\'  127.0.0.1:20162 firm_wallet.balance_operation_servicepb.BalanceOperationService/QueryBalance\ngrpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto balance_operation_servicepb.proto -d \'{"account_id": "tony"}\'  127.0.0.1:20163 firm_wallet.balance_operation_servicepb.BalanceOperationService/QueryBalance\ngrpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto balance_operation_servicepb.proto -d \'{"account_id": "tony"}\'  127.0.0.1:20164 firm_wallet.balance_operation_servicepb.BalanceOperationService/QueryBalance\ngrpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto balance_operation_servicepb.proto -d \'{"account_id": "tony"}\'  127.0.0.1:20165 firm_wallet.balance_operation_servicepb.BalanceOperationService/QueryBalance\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Query Events")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'grpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto internal_servicepb.proto  -d \'{"first_seq_num": 1, "last_seq_num": 10}\'  127.0.0.1:20161 firm_wallet.internal_servicepb.InternalService/QueryEvents\ngrpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto internal_servicepb.proto  -d \'{"first_seq_num": 1, "last_seq_num": 10}\'  127.0.0.1:20162 firm_wallet.internal_servicepb.InternalService/QueryEvents\ngrpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto internal_servicepb.proto  -d \'{"first_seq_num": 1, "last_seq_num": 10}\'  127.0.0.1:20163 firm_wallet.internal_servicepb.InternalService/QueryEvents\ngrpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto internal_servicepb.proto  -d \'{"first_seq_num": 1, "last_seq_num": 10}\'  127.0.0.1:20164 firm_wallet.internal_servicepb.InternalService/QueryEvents\ngrpcurl -plaintext -import-path ./firm_wallet -import-path ./ -proto internal_servicepb.proto  -d \'{"first_seq_num": 1, "last_seq_num": 10}\'  127.0.0.1:20165 firm_wallet.internal_servicepb.InternalService/QueryEvents\n')))}d.isMDXComponent=!0}}]);