"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6536],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return n?a.createElement(f,i(i({ref:t},l),{},{components:n})):a.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:r,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8905:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:0},i=void 0,c={unversionedId:"API Doc/Account Structure",id:"API Doc/Account Structure",title:"Account Structure",description:"The Account Structure",source:"@site/docs/API Doc/Account Structure.md",sourceDirName:"API Doc",slug:"/API Doc/Account Structure",permalink:"/Auticuro/docs/API Doc/Account Structure",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"API Doc",permalink:"/Auticuro/docs/category/api-doc"},next:{title:"Account management APIs",permalink:"/Auticuro/docs/category/account-management-apis"}},s={},u=[{value:"The Account Structure",id:"the-account-structure",level:3},{value:"The account protobuf description:",id:"the-account-protobuf-description",level:3},{value:"Balance Structure",id:"balance-structure",level:3}],l={toc:u},p="wrapper";function m(e){let{components:t,...o}=e;return(0,r.kt)(p,(0,a.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"the-account-structure"},"The Account Structure"),(0,r.kt)("p",null,"An account is divided into four parts: TransactionSection, Available, ReservedSection, and Configuration."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image info",src:n(9828).Z,width:"640",height:"601"})),(0,r.kt)("p",null,"TransactionSection is a mapping from transactionId to its PendingIn amount and PendingOut amount\nmanipulated by the TCC interfaces."),(0,r.kt)("p",null,"ReservedSection is a mapping from reservationId to its reserved amount, which supports Reserve,\nIncrementalReserve, Release, and PartialRelease interface."),(0,r.kt)("p",null,"The Reserve interface allows reserving an amount of money within an account for future usage\npurposes by moving the money from the available section to the reserved section. The only permitted\noperation on that reserved money is the Release interface which moves the money back to the available\nsection. IncrementalReserve and PartialRelease are just variants of Reserve and Release."),(0,r.kt)("p",null,"The Configuration contains fields like UpperLimit, LowerLimit, State, Currency, and Version, which\ncould be updated by UpdateUpperLimit, UpdateLowerLimit, LockAccount, and UnlockAccount interface."),(0,r.kt)("p",null,"The Transfer interface is a bilateral money movement between two accounts inside the same Auticuro\nshard. BatchBalanceOperation is a batch of money movement for accounts inside the same Auticuro\nshard, and each money movement credits or debits an amount from one account."),(0,r.kt)("p",null,"Updating the account follows a Copy-On-Write pattern. Instead of directly updating the account,\neach modification will be applied to a copy of the account. Each time the copy-on-write happens,\nwe will assign an increased version number to it. so we know the entire history of the account modification."),(0,r.kt)("h3",{id:"the-account-protobuf-description"},"The account protobuf description:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"AccountConfig"),": The configuration settings for the account."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Balance"),": The current balance of the account, including available funds, reservations, and\npending transactions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"AccountState"),": The current state of the account, such as normal, locked, or deleted."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"account_id"),": A unique identifier for the account."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"version_number"),": A monotonically increasing version number that increments with each change to\nthe account.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-protobuf"},"message Account {\n  AccountConfig config = 1;\n  Balance balance = 2;\n  AccountState state = 3;\n  string account_id = 4;\n  uint64 version_number = 5; // monotonically increasing, increased by 1 upon any account changes\n}\n\nmessage AccountConfig {\n  BalanceLimit balance_limit = 1;\n  AssetClass asset_class = 2;\n}\n\nmessage BalanceLimit {\n  string upper = 1;\n  string lower = 2;\n}\n\nmessage AssetClass {\n  oneof asset_class {\n    Cash cash = 1;\n  }\n\n  message Cash {\n    string currency = 1;\n  }\n}\n\nenum AccountState {\n  InvalidState = 0;\n  Deleted = 1;\n  Locked = 2;\n  Normal = 3;\n}\n")),(0,r.kt)("h3",{id:"balance-structure"},"Balance Structure"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Balance")," message contains information about the account's balances, including:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"available"),": The available balance for general use."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"reservations"),": A map of reservation IDs to reserved amounts, representing funds set aside for\nspecific purposes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"pending_in"),": A map of transaction IDs to pending incoming amounts, representing funds expected\nto be credited to the account."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"pending_out"),": A map of transaction IDs to pending outgoing amounts, representing funds expected\nto be debited from the account.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-protobuf"},"message Balance {\n  string available = 1;\n  map<string, string> reservations = 2; // reservation_id -> reservation amount\n\n  map<string, string> pending_in = 3; // txn_id -> pending_in amount\n  map<string, string> pending_out = 4; // txn_id -> pending_out amount\n}\n")))}m.isMDXComponent=!0},9828:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/account_structure-4bec1330997b434eeaeec0519f1a6221.svg"}}]);